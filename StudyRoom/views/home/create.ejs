<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <%- include('links') %>
    <link rel="stylesheet" href="/styles/create.css" />
    <title>StudyRoom - Create</title>
  </head>
  <body>
    <%- include('navbar') %>

    <div class="alert" id="alert" role="alert"></div>
    <div class="main">
      <div class="box" id="box">
        <h1 id="addRoomBtn">
          <i class="fa-solid fa-circle-plus"></i> Create New Room
        </h1>
        <div class="searchBox">
          <input
            type="text"
            placeholder="search"
            class="search"
            id="searchInput"
          />
        </div>
        <div class="feed" id="feed">
          <img
            src="/icon/emptyList.png"
            alt=""
            class="emptyImg"
            id="emptyImg"
          />
        </div>
      </div>
      <div class="box" id="addRoom">
        <div class="head">
          <h1>
            <i class="fa-solid fa-arrow-left" id="backBtn"></i> Create New Room
          </h1>
        </div>
        <form id="createForm">
          <label for="name">Room Name:</label>
          <input type="text" id="name" name="name" required />
          <br />
          <label for="organization">Organization:</label>
          <input type="text" id="organization" name="organization" required />
          <br />
          <h2>Custom Fields:</h2>
          <div id="customFieldsContainer"></div>
          <button type="button" onclick="addCustomField()">
            Add Custom Field
          </button>
          <br /><br />
          <button type="submit">Create Room</button>
        </form>
      </div>
    </div>
    <script>
      const addRoomBtn = document.getElementById("addRoomBtn");
      const box = document.getElementById("box");
      const addRoom = document.getElementById("addRoom");
      const backBtn = document.getElementById("backBtn");
      const createForm = document.getElementById("createForm");
      const myAlert = document.getElementById("alert");
      const feed = document.getElementById("feed");
      const searchInput = document.getElementById("searchInput");
      const emptyImg = document.getElementById("emptyImg");

      const fetchAndDisplayList = async () => {
        const response = await fetch("/created-rooms", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        const rooms = await response.json();
        emptyImg.style.display = "none";

        rooms.forEach((item) => {
          const div = document.createElement("div");
          div.innerHTML = `<span class="logo-name"><img src="${item.img}" alt="" class="room-img" /> <div class="room-name">${item.name}</div></span><a class="btn btn-primary joinBtn" href="/room/${item.roomId}">Join</a>`;
          div.className = "item";
          feed.appendChild(div);
        });

        if (
          feed.innerHTML.trim() ===
          `<img src="/icon/emptyList.png" alt="" class="emptyImg" id="emptyImg" style="display: none;">`
        ) {
          emptyImg.style.display = "block";
        }
      };

      searchInput.addEventListener("keyup", () => {
        const searchText = searchInput.value.toLowerCase();
        const items = feed.getElementsByClassName("item");
        emptyImg.style.display = "none";
        let flag = true;
        Array.from(items).forEach((item) => {
          const text = item.textContent.toLowerCase();
          if (text.includes(searchText)) {
            flag = false;
            item.style.display = "flex";
          } else {
            item.style.display = "none";
          }
        });
        if (flag) {
          emptyImg.style.display = "block";
        }
      });

      fetchAndDisplayList();

      const showAlert = (text, type) => {
        myAlert.classList.add("show", `alert-${type}`);
        myAlert.innerText = text;
        setTimeout(() => {
          myAlert.classList.remove("show", `alert-${type}`);
        }, 3000);
      };

      addRoomBtn.addEventListener("click", () => {
        box.style.display = "none";
        addRoom.style.display = "flex";
        backBtn.style.cursor = "pointer";
      });

      backBtn.addEventListener("click", () => {
        box.style.display = "flex";
        addRoom.style.display = "none";
      });

      const name = document.getElementById("name");
      const organization = document.getElementById("organization");
      const container = document.getElementById("customFieldsContainer");

      createForm.addEventListener("submit", async (event) => {
        event.preventDefault();
        const allFieldName = container.querySelectorAll(".fieldName");
        const allFieldType = container.querySelectorAll(".fieldType");

        let data = {
          name: name.value,
          organization: organization.value,
          customFields: [],
        };

        allFieldName.forEach((input, index) => {
          let fieldData = {
            fieldName: input.value,
            fieldType: allFieldType[index].value,
          };
          data.customFields.push(fieldData);
        });

        const response = await fetch(`/create-room`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        const feedback = await response.json();
        if (feedback.success) {
          showAlert("Room Created Successfully", "success");
          feed.innerHTML = "";
          fetchAndDisplayList();
          backBtn.click();
          createForm.reset();
        }
      });

      function addCustomField() {
        const container = document.getElementById("customFieldsContainer");
        const fieldNumber = container.children.length + 1;
        const newField = document.createElement("div");
        newField.classList.add("custom-field");
        newField.innerHTML = `
                <label for="fieldName${fieldNumber}">Field Name:</label>
                <input type="text" id="fieldName${fieldNumber}" class="fieldName" name="fieldName${fieldNumber}" required>
                <label for="fieldType${fieldNumber}">Field Type:</label>
                <select id="fieldType${fieldNumber}" class="fieldType" name="fieldType${fieldNumber}" required>
                    <option value="">Select Type</option>
                    <option value="text">Text</option>
                    <option value="number">Number</option>
                </select>
                <button type="button" onclick="removeCustomField(this)">Remove</button>
            `;
        container.appendChild(newField);
      }

      function removeCustomField(button) {
        const customField = button.parentNode;
        customField.remove();
      }
    </script>
  </body>
</html>
